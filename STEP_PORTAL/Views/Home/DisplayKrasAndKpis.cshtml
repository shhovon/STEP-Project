@model CompositeModel

@{
    var sessionIds = ViewBag.SessionIds as List<string>;
}

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/CustomStyles.css">
</head>

<style>
    td { /*design for selectedItemsTable table*/
        font-size: 12px !important;
        max-width: 200px !important;
        overflow: hidden !important;
        /*text-overflow: ellipsis;*/ /* Display ... for overflowed text */
        white-space: normal !important;
    }

    .dropdown-container .form-control.custom-select option {
        width: 100% !important;
        white-space: normal !important;
        word-wrap: break-word !important;
    }

    .container {
        display: flex;
        justify-content: space-between;
    }

    #selectedInfo, #userAddedInfo {
        flex: 1;
        padding: 15px;
    }
</style>


<!-- modal button -->
<!--<button style="float:right;" type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
    NEW
</button>
<br />-->
<!-- modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="myModalLabel">Add Outcome</h4>
                <button type="button" class="close btn btn-danger" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>

            <div class="modal-body">
@*                @using (Html.BeginForm("InsertKpiOutcomes", "Home", FormMethod.Post, new { id = "outcomeForm" }))
                {*@
                    <div class="dropdown-container">
                        <label class="dropdown-label" for="taxPeriodDropdown">Choose Session:</label>
                        <br />
                        <select id="taxPeriodDropdown" class="form-control custom-select">
                            <!-- options will be added dynamically via javascript -->
                        </select>
                    </div>
                    <input type="hidden" id="selectedTaxPeriod" name="selectedTaxPeriod" />



                    <div class="dropdown-container">
                        <label class="dropdown-labeAl" for="selectedKRA">Select KRA:</label>
                        <br />
                        @Html.DropDownList("selectedKRA", new SelectList(Model.KraKpiData.Select(x => x.KRA).Distinct()), "Select KRA", new { @class = "form-control custom-select" })
                    </div>

                    <div class="dropdown-container">
                        <label class="dropdown-label" for="selectedKPI">Select KPI:</label>
                        <br />
                        <div id="kpiDropdown" class="form-control"></div>
                    </div>

                    <div class="outcome-field">
                        <label class="dropdown-label" for="kpiOutcome">KPI Outcome:</label>
                        <br />
                        <div id="kpiOutcomeFields" class="form-control"></div>
                    </div>

@*                    <input type="submit" value="Add" class="submit-btn" />*@
                        <button id="addOutcomeBtn" class="submit-btn">Add</button>
@*                }*@
            </div>
            <div class="modal-footer" id="modalFooter">

            </div>
        </div>
    </div>
</div>


<div class="dropdown-container">
    <label class="dropdown-label" for="taxPeriodDropdownMV">Choose Session:</label>
    <br />
    <select id="taxPeriodDropdownMV" class="form-control custom-select">
        <option value="" selected disabled>Choose a Session</option>
        @foreach (var taxPeriod in ViewBag.TopTaxPeriods)
        {
            <option value="@taxPeriod">@taxPeriod</option>
        }
    </select>
</div>
<input type="hidden" id="selectedTaxPeriod" name="selectedTaxPeriod" />

<br />
<!-- modal button -->
<button style="float:right;" type="button" class="btn btn-primary" data-toggle="modal" data-target="#myModal">
    NEW
</button>





<style>
    .card-body {
        @*        background: linear-gradient(to right, #78a7ca, #accbee);*@
        background: linear-gradient(to right, #d9e8f5, #e6f1fb);
        padding: 8px;
        border-radius: 8px;
        height: 70px;
    }

    .card {
        width: fit-content;
        margin: auto;
        margin-top: 10px;
    }

    .card-container {
        display: flex;
        justify-content: center;
    }

    .btn {
        margin-bottom: 10px;
    }

    .btn {
        margin-bottom: 10px;
        margin-right: 10px;
    }
</style>



@*      new navigation buttons   *@


<div class="card">
    <div class="card-body">
        @*<a href="@Url.Action("DisplayKrasAndKpis", "Home")" id="outcomeEntryBtn" class="btn btn-primary submit-btn">Outcome Entry</a>*@
        <a href="@Url.Action("SpecialFactors", "Employee")" id="specialFactorsBtn" class="btn btn-primary submit-btn">Special Factor</a>
        <a href="@Url.Action("TrainingNeed", "Employee")" id="trainingNeedBtn" class="btn btn-primary submit-btn">Training Need</a>
    </div>
</div>



<br />
<br />
@*             button end       *@


<div class="container">
    <div id="selectedInfo">
        <h4>Section KRA/KPI and Master Data</h4>
        <table id="selectedItemsTable" class="table">
            <thead>
                <tr>
                    <th>List of KRA</th>
                    <th>List of KPI</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var item in Model.KraKpiData)
                {
                    <tr>
                        <td>@item.KRA</td>
                        <td>@item.KPI</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


    <div id="userAddedInfo">
        <h4>Selected KRA/ KPI/ KPI OUTCOME</h4>
        <table class="table">
            <thead>
                <tr>
                    <th>Selected KRA</th>
                    <th>Selected KPI</th>
                    <th>KPI Outcome</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.StepData.Count > 0)
                {
                    foreach (var item in Model.StepData)
                    {
                        <tr>
                            <td>@item.KRA</td>
                            <td>@item.KPI</td>
                            <td>@(item.KPI_OUTCOME != null ? item.KPI_OUTCOME : "")</td>
                            <td style="text-align: center; vertical-align: middle !important;">
                                @*@if (Session["IsDeletionPossible"] != null && (bool)Session["IsDeletionPossible"])
                                    {*@
                                <form action="@Url.Action("DeleteSession", "Home")" method="post" onsubmit="return confirm('Are you sure you want to delete this?');">
                                    @Html.Hidden("kraId", item.KRA_ID)
                                    @Html.Hidden("kpiId", item.KPI_ID)
                                    @Html.Hidden("kpiOutcome", item.KPI_OUTCOME)
                                    <button class="btn btn-danger" type="submit">
                                        <i class="ti-trash"></i>
                                    </button>
                                </form>
                                @*                            }
                                    else
                                    {
                                        <span style="color:red;">Data sent for approval</span>
                                    }*@
                            </td>
                        </tr>
                    }
                }
            </tbody>



        </table>
        <br /><br />
        @*        <div class="form-group" id="nextButtonContainer">
                <div class="col-md-offset-2 col-md-10">
                    <a id="nextButton" href="@Url.Action("SpecialFactors", "Employee")" class="btn btn-primary submit-btn">Special Factors</a>
                </div>
            </div>*@
        @if (TempData["ErrorMessage"] != null)
        {
            <div class="alert alert-danger">
                @TempData["ErrorMessage"]
            </div>
        }
    </div>
</div>


@section scripts {
    <script>
        $(function () {
            $('#taxPeriodDropdownMV').change(function () {
                var selectedSession = $(this).val();
                var regId = @(Session["RegId"]);

                $.ajax({
                    url: '@Url.Action("GetFilteredData", "Home")',
                    type: 'GET',
                    data: { selectedSession: selectedSession, regId: regId },
                    success: function (response) {
                        $('#selectedItemsTable tbody').empty();

                        response.forEach(function (item) {
                            var newRow = '<tr>' +
                                '<td>' + item.KRA + '</td>' +
                                '<td>' + item.KPI + '</td>' +
@*                                '<td>' + (item.KPI_OUTCOME != null ? item.KPI_OUTCOME : "") + '</td>' +*@
                                '</tr>';

                            $('#selectedItemsTable tbody').append(newRow);
                        });
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });

           $(function () {
    $('#selectedKRA').change(function () {
        var selectedKRA = $(this).val();
        var kraKpiData = @Html.Raw(Json.Encode(Model.KraKpiData));

        // Filter KPIs based on selected KRA
        var filteredKPIs = kraKpiData.filter(function (item) {
            return item.KRA === selectedKRA;
        });
        console.log(selectedKRA);
        console.log(filteredKPIs);

        // Clear existing options in the dropdown
        $('#selectedKPI').empty();

        $('#kpiDropdown').empty();
        var selectElement = $('<select id="selectedKPI" name="selectedKPI"></select>');

        // Append each option to the select element
        filteredKPIs.forEach(function (item) {
            var option = $('<option value="' + item.KPI + '">' + item.KPI + '</option>');
            selectElement.append(option);
        });

        // Append the select element to the dropdown container
        $('#kpiDropdown').append(selectElement);

        // Trigger change event for dynamically generated KPI dropdown
        $('#selectedKPI').trigger('change');
    });

    // Change event for dynamically generated KPI dropdown
    $(document).on('change', '#selectedKPI', function () {
        var selectedKPI = $(this).val();

        $('#kpiOutcomeFields').empty();
        $('#kpiOutcomeFields').append('<div><label></label><input type="text" name="kpiOutcomes" /></div>');
    });
});

            // start of outcome button

            $('#addOutcomeBtn').click(function () {
        var selectedTaxPeriod = $('#selectedTaxPeriod').val();
        var selectedKRA = $('#selectedKRA').val();
        var selectedKPI = $('#selectedKPI').val();
        var kpiOutcomes = $('#kpiOutcomeFields input[name=kpiOutcomes]').val();

        // Validate form fields
        if (!selectedTaxPeriod || !selectedKRA || !selectedKPI || !kpiOutcomes) {
            alert("Please select KRA, KPI, provide outcome, and select Session");
            return;
        }

        // Prepare data for AJAX request
        var formData = {
            selectedKRA: selectedKRA,
            selectedKPI: selectedKPI,
            kpiOutcomes: kpiOutcomes,
            selectedTaxPeriod: selectedTaxPeriod
        };

        // Send AJAX request
        $.ajax({
            url: '@Url.Action("InsertKpiOutcomes", "Home")',
            type: 'POST',
            data: formData,
            success: function (response) {
                // Handle success response
                $('#myModal .modal-body').html('<div class="alert alert-success">Outcome added successfully!</div>');
                $('#myModal .modal-footer').html('<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>');
                // Reload page after modal is closed
                $('#myModal').on('hidden.bs.modal', function () {
                    location.reload();
                });
            },
            error: function (xhr, status, error) {
                // Handle error response
                $('#myModal .modal-body').html('<div class="alert alert-danger">Could not add outcome!</div>');
                $('#myModal .modal-footer').html('<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>');
            }
        });
            });

            // end of outcome button

            // Update hidden field with selected tax period value
            $('#taxPeriodDropdown').change(function () {
                var selectedTaxPeriod = $(this).val();
                $('#selectedTaxPeriod').val(selectedTaxPeriod);
            });

            // modal validation
            $('#outcomeForm').submit(function (event) {
                event.preventDefault();
                var formData = $(this).serialize();

                $.ajax({
                    url: $(this).attr('action'),
                    type: $(this).attr('method'),
                    data: formData,
                    success: function (response) {
                        $('#myModal .modal-body').html('<div class="alert alert-success">Outcome added successfully!</div>');
                        $('#myModal .modal-footer').html('<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>');
                    },
                    error: function (xhr, status, error) {
                        $('#myModal .modal-body').html('<div class="alert alert-danger">Could not add outcome!</div>');
                        $('#myModal .modal-footer').html('<button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>');
                    }
                });
            });

            // Reload page when modal is closed
            $('#myModal').on('hidden.bs.modal', function () {
                if ($('#myModal .alert-success').length) {
                    window.location.reload();
                }
                else if ($('#myModal .alert-danger').length) {
                    window.location.reload();
                }
            });
        });

            $(document).ready(function () {
            var userAddedData = @(Session["UserAddedData"] == null ? "false" : "true");
            if (!userAddedData) {
                $('#nextButtonContainer').hide();
            }
            });

        // modal dropdown auto select

        function updateModalDropdown(selectedSession) {
            document.getElementById("selectedTaxPeriod").value = selectedSession;

            // Set value of modal dropdown
            var modalDropdown = document.getElementById("taxPeriodDropdown");
            modalDropdown.innerHTML = '';
            modalDropdown.disabled = true;

            // Add option for selected session
            var option = document.createElement("option");
            option.text = selectedSession;
            option.value = selectedSession;
            modalDropdown.add(option);
        }

        document.getElementById("taxPeriodDropdownMV").addEventListener("change", function () {
            var selectedSession = this.value;
            updateModalDropdown(selectedSession);
        });

        $('#myModal').on('show.bs.modal', function (e) {
            var selectedSession = document.getElementById("selectedTaxPeriod").value;
            updateModalDropdown(selectedSession);
        });

        // delete confirmation

        $('.delete-btn').click(function () {
            var description = $(this).data('description');
            if (confirm("Are you sure you want to delete this description?")) {
                $('#deleteForm_' + description).submit();
            }
        });

        // session validation

        $("#outcomeEntryBtn, #specialFactorsBtn, #trainingNeedBtn").click(function (e) {
            var selectedTaxPeriod = $("#selectedTaxPeriod").val();

            if (!selectedTaxPeriod || selectedTaxPeriod === "0") {
                e.preventDefault();
                alert("Choose a session first");
            }
        });
    </script>
}


