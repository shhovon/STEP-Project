@model STEP_PORTAL.Models.tblSpecial_Factor

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/CustomStyles.css">
</head>

<style>
    .card-body {
        @*  background: linear-gradient(to right, #78a7ca, #accbee);*@

        background: linear-gradient(to right, #d9e8f5, #e6f1fb);
        padding: 8px;
        tblSpecial_Factor border-radius: 8px;
        height: 70px;
    }

    .card {
        width: fit-content;
        margin: auto;
        margin-top: 10px;
    }

    .card-container {
        display: flex;
        justify-content: center;
    }

    .btn {
        margin-bottom: 10px;
    }

    .btn {
        margin-bottom: 10px;
        margin-right: 10px;
    }


    #userAddedInfo, .form-horizontal {
        flex: 1;
        padding: 15px;
    }
</style>


@if (!string.IsNullOrEmpty(TempData["SuccessMessage"] as string))
{
    <div class="alert alert-success" role="alert">
        @TempData["SuccessMessage"]
    </div>
}



<div class="dropdown-container">

    <label class="dropdown-label" for="taxPeriodDropdownMV"> Session:</label>
    <label class="form-control" for="taxPeriodDropdownMV"> @Session["TaxPeriod"]</label>


</div>


@*      new navigation buttons   *@
<div class="card" style=" background-color: transparent">
    <div id="menu_tab">

        <!-- Selected by default -->

        <input id="1" name="r" type="radio" />
        <label class="collapse" for="1"><a href="@Url.Action("DisplayKrasAndKpis", "Home")"> 1. Outcome Entry</a></label>
        <div></div>

        <input id="2" name="r" type="radio" checked />
        <label class="collapse" for="2"> <a href="@Url.Action("SpecialFactors", "Employee")"> 2. Special Factor</a></label>
        <div></div>

        <input id="3" name="r" type="radio" />
        <label class="collapse" for="1"><a href="@Url.Action("TrainingNeed", "Employee")"> 3. Training  & Submit</a></label>
        <div></div>
    </div>
</div>

<form id="specialFactorForm">
    <div class="form-horizontal">
        <h4>Add Special Factors</h4>


        <hr />
        <br />
        <div id="validationSummary" class="text-danger"></div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                <span id="descriptionValidation" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <button type="button" id="saveButton" class="btn btn-primary submit-btn">Save</button>
            </div>
        </div>
    </div>
</form>

<div id="userAddedInfo">
    <h3>Added Special Factors</h3>
    @if (ViewBag.AddedDescriptions != null && ViewBag.AddedDescriptions.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Description</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var description in ViewBag.AddedDescriptions)
                {
                    <tr>
                        <td>@description</td>
                        <td style="text-align: center; vertical-align: middle !important;">
                            <button class="btn btn-danger delete-btn" data-description="@description">
                                <i class="ti-trash"></i>
                            </button>
                        </td>
                    </tr>
           }
            </tbody>
        </table> }
    else
    {
        <p>No descriptions found</p>
    }
    <br />

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            @TempData["ErrorMessage"]
        </div>
    }
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            $('#saveButton').click(function () {
                submitForm();
            });

            $('.delete-btn').click(function () {
                var description = $(this).data('description');
                if (confirm("Are you sure you want to delete this description?")) {
                    deleteDescription(description);
                }
            });
        });

        function submitForm() {
            var formData = {
                Description: $('#Description').val()
            };

            $.ajax({
                type: 'POST',
                url: '@Url.Action("SpecialFactors", "Employee")',
                data: formData,
                success: function (data) {
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    var errorMessage = xhr.responseText || 'An error occurred while submitting the form';
                    $('#validationSummary').html(errorMessage);
                    $('#descriptionValidation').html(xhr.responseJSON && xhr.responseJSON.modelStateErrors['Description'] || '');
                }
            });
        }

        function deleteDescription(description) {
            $.ajax({
                type: 'POST',
                url: '@Url.Action("DeleteSession", "Employee")',
                data: { description: description },
                success: function (data) {
                    window.location.reload();
                },
                error: function (xhr, status, error) {
                    alert('An error occurred while deleting the description');
                }
            });
        }
    </script>
}



