@model STEP_DEMO.Models.tblTraining_Need

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/CustomStyles.css">
</head>

<style>
    .card-body {
        @*        background: linear-gradient(to right, #78a7ca, #accbee);*@
        background: linear-gradient(to right, #d9e8f5, #e6f1fb);
        padding: 8px;
        border-radius: 8px;
        height: 70px;
    }

    .card {
        width: fit-content;
        margin: auto;
        margin-top: 10px;
    }

    .card-container {
        display: flex;
        justify-content: center;
    }

    .btn {
        margin-bottom: 10px;
    }

    .btn {
        margin-bottom: 10px;
        margin-right: 10px;
    }
</style>

@*      new navigation buttons   *@

<div class="card">
    <div class="card-body">
        <a href="@Url.Action("DisplayKrasAndKpis", "Home")" class="btn btn-primary submit-btn">Outcome Entry</a>
        <a href="@Url.Action("SpecialFactors", "Employee")" class="btn btn-primary submit-btn">Special Factor</a>
        <a href="@Url.Action("TrainingNeed", "Employee")" class="btn btn-primary submit-btn">Training Need</a>
    </div>
</div>
<br />
<br />
@*   button end     *@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>Add Training Need</h4>
        <hr />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })


        <div class="form-group">
            <label for="" class="control-label col-md-2">Title</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="" class="control-label col-md-2">By When</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.By_When, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                @Html.ValidationMessageFor(model => model.By_When, "", new { @class = "text-danger" })
            </div>

        </div>

        <div class="form-group">
            <div class="col-md-2" style="white-space: nowrap;">
                <label class="control-label">How to Train</label>
            </div>
            <div class="col-md-10">
                <div class="dropdown-container">
                    @Html.DropDownListFor(model => model.Train_Type, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "On The Job", Value = "On The Job" },
                        new SelectListItem { Text = "Coaching", Value = "Coaching" },
                        new SelectListItem { Text = "Out Sourced", Value = "Out Sourced" }
                    }, "Select Training Type", new { @class = "form-control custom-select" })
                </div>
            </div>
        </div>


        <div class="form-group">
            <label for="" class="control-label col-md-2">Status</label>

            <div class="col-md-10">
                @Html.EditorFor(model => model.Status, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary submit-btn" />
            </div>
        </div>
        <br />


        <div id="userAddedInfo">
            <h3>Added Special Factors</h3>
            @if (Session["TrainingData"] != null)
            {
                var sessionTrainingData = Session["TrainingData"];
                List<STEP_DEMO.Models.tblTraining_Need> trainingData = sessionTrainingData as List<STEP_DEMO.Models.tblTraining_Need>;

                if (trainingData != null && trainingData.Any())
                {
                    <table class="table">
                        <thead>
                            <tr>
                                <th>Title</th>
                                <th>Date</th>
                                <th>Train Type</th>
                                <th>Status</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var training in trainingData)
                            {
                                <tr>
                                    <td>@training.Title</td>
                                    <td>@training.By_When</td>
                                    <td>@training.Train_Type</td>
                                    <td>@training.Status</td>
                                    <td style="text-align: center; vertical-align: middle !important;">
                                        <form action="@Url.Action("DeleteTraining", "Employee")" method="post" onsubmit="return confirm('Are you sure you want to delete this?');">
                                            @Html.AntiForgeryToken()
                                            <input type="hidden" name="title" value="@training.Title" />
                                            <input type="hidden" name="by_when" value="@training.By_When.ToString()" />
                                            <input type="hidden" name="type" value="@training.Train_Type" />
                                            <input type="hidden" name="status" value="@training.Status" />

                                            <button class="btn btn-danger delete-btn" type="submit">
                                                <i class="ti-trash"></i>
                                            </button>
                                        </form>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p>No training data found</p>
                }
            }
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("DisplayAllData", "Employee")" class="btn btn-primary submit-btn">Review Submission</a>
            </div>
        </div>
    </div>
}

