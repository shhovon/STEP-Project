@model List<KraKpiOutcomeModel>


<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/CustomStyles.css">
</head>

<body>

    <h3>View Marks</h3>
    <br />

    @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
    {
        <script>alert('@ViewBag.ErrorMessage');</script>
    }


@*    <div class="dropdown-container">
        <label class="dropdown-label" for="taxPeriodDropdownMV">Choose Session:</label>
        <br />
        <select id="taxPeriodDropdownMV" class="form-control custom-select">
            @foreach (var taxPeriod in ViewBag.TopTaxPeriods)
            {
                <option value="@taxPeriod">@taxPeriod</option>
            }
        </select>
    </div>
    <input type="hidden" id="selectedTaxPeriod" name="selectedTaxPeriod" />*@
<style>
    .tab {
        display: inline-block;
        margin-left: 40px;
    }    
    .tab2 {
        display: inline-block;
        margin-left: 45px;
    }
</style>

    <br />
    <div>
        <p><strong>Employee Code: <span class="tab2"></span> @Session["EmployeeCode"]</strong></p>
        <p><strong>Employee Name: <span class="tab"></span> @Session["Name"]</strong></p>
    </div>
    <br />

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive">
            <table class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th>KRA</th>
                        <th>KPI</th>
                        <th>Outcome</th>
                        <th>Performance Marks</th>
                        <th>Total Average</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@item.KRA</td>
                            <td>@item.KPI</td>
                            <td>@item.Outcome</td>
                            <td>@item.Marks_Achieved</td>
                            <td>@item.AVG_Marks_Achieved</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <p>No marks data available</p>
    }
    <br /><br />
    <div style="padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
        <label for="comment" style="font-weight: bold; color: #333;">Supervisor's Comment:</label><br>
        <input type="text" disabled id="comment" name="comment" style="width: 100%; padding: 10px; margin-top: 5px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 5px; box-sizing: border-box;">
        <br>
    </div>
    <br />

    @using (Html.BeginForm("SaveUserComment", "ReportSuper", FormMethod.Post))
    {
        @Html.Hidden("regId", null, new { id = "viewregIDField" })

        @*        @Html.HiddenFor(m => m[0].REG_ID)*@

        <div style="padding: 20px; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);">
            <label for="comment" style="font-weight: bold; color: #333;">Comment:</label><br>
            <input type="text" id="UserComment" name="comment" style="width: 100%; padding: 10px; margin-top: 5px; margin-bottom: 20px; border: 1px solid #ccc; border-radius: 5px; box-sizing: border-box;">
            <br>
            <input type="submit" value="Submit" color: white; padding: 10px 20px; border: none; border-radius: 4px; cursor: pointer;">
        </div>
    }

</body>

@section scripts {
    <script>
        $(function () {
            $('#taxPeriodDropdownMV').change(function () {
                var selectedSession = $(this).val();
                console.log(selectedSession);

                $.ajax({
                    url: '@Url.Action("GetFilteredMarksData", "Home")',
                    type: 'GET',
                    data: { selectedSession: selectedSession },
                    success: function (response) {
                        $('tbody').empty();
                        var totalMarks = 0;
                        var count = 0;

                        response.forEach(function (item) {
                            var newRow = '<tr>' +
                                '<td>' + item.KPI_OUTCOME + '</td>' +
                                '<td>' + item.Marks_Achieved + '</td>' +
                                '<td></td>' +
                                '</tr>';

                            totalMarks += item.Marks_Achieved;
                            console.log(totalMarks);
                            count++;
                            $('tbody').append(newRow);
                        });

                        var average = totalMarks / count;
                        $('#averageMarks').text(average.toFixed(2));
                        console.log(average);
                        $('tfoot td:nth-child(3)').text(average.toFixed(2));
                    },
                    error: function (xhr, status, error) {
                        console.error(error);
                    }
                });
            });
        });

        $.ajax({
        url: '@Url.Action("GetReportSuperComment", "ReportSuper")',
        type: 'GET',
        dataType: 'json',
        success: function(data) {
            $('#comment').val(data.SupervisorComment);
        },
        error: function() {
            console.error('Error fetching supervisor comment!');
        }
        });

        $.ajax({
        url: '@Url.Action("GetUserComment", "ReportSuper")',
        type: 'GET',
        dataType: 'json',
        success: function(data) {
            $('#UserComment').val(data.UserComment);
        },
        error: function() {
            console.error('Error fetching employee comment!');
        }
    });

        $(function() {
            $('form').submit(function(event) {
                event.preventDefault();

                var formData = $(this).serialize();

                $.ajax({
                    url: '@Url.Action("SaveUserComment", "ReportSuper")',
                    type: 'POST',
                    data: formData,
                    success: function(response) {
                        if (response.success) {
                            alert(response.message);
                        } else {
                            alert(response.message);
                        }
                    },
                    error: function() {
                        alert('An error occurred while saving the comment!');
                    }
                });
            });
            });

    </script>
}

