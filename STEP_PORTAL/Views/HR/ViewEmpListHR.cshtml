@*@model List<STEP_PORTAL.Models.EmployeeInfo>*@
@model EmployeeSessionViewModelClass

<head>
    <link rel="stylesheet" type="text/css" href="~/Content/css/CustomStyles.css">
    <style>

        #searchInput {
            flex-grow: 1;
            margin-right: 10px;
            font-size: 16px;
            padding: 8px 12px;
            border: 1px solid #ddd;
            width: 20%;
        }
    </style>
</head>

@using (Html.BeginForm("AddMarksHR", "HR", FormMethod.Post, new { id = "employeeForm", target = "_blank" }))
{
    @Html.Hidden("regID", null, new { id = "regIDField" })
}

@using (Html.BeginForm("ViewMarks", "ReportSuper", FormMethod.Post, new { id = "viewMarksForm" }))
{
    @Html.Hidden("regID", null, new { id = "viewregIDField" })
}

<h3 style="text-align:center;">All Employees List (Unit HR)</h3>

@using (Html.BeginForm("ViewEmpListHR", "HR", FormMethod.Post, new { id = "viewEmpListForm" }))
{
    <div class="dropdown-container">
        <label class="dropdown-label" for="taxPeriodDropdownMV">Choose Session:</label>
        <br />
        <select id="taxPeriodDropdownMV" class="form-control custom-select">
            <option value="" @(ViewBag.SelectedTaxPeriod == null ? "selected" : "")>Choose a Session</option>
            @foreach (var taxPeriod in ViewBag.TopTaxPeriods)
            {
                <option value="@taxPeriod.TaxPerID">@taxPeriod.TaxPeriod</option>
            }
        </select>
        <input type="hidden" id="selectedTaxPeriod" name="selectedTaxPeriod" value="@ViewBag.SelectedTaxPeriod" />
    </div>

    <div class="form-group">
        @Html.DropDownList("companyId", ViewBag.Companies as SelectList, "Select an unit", new { @class = "form-control" })
        @Html.ValidationMessage("companyId", "", new { @class = "text-danger" })
        @*@Html.DropDownList("DepartmentDropdown", new SelectList(ViewBag.Departments, "DepartmentName", "DepartmentName"), "Select Department", new { @class = "form-control" })*@
        @Html.DropDownList("DepartmentDropdown", new SelectList(ViewBag.Departments, "DepartmentName", "DepartmentName", ViewBag.SelectedDepartment), "Select Department", new { @class = "form-control" })
        @Html.DropDownList("SectionDropdown", Enumerable.Empty<SelectListItem>(), "Select Section", new { @class = "form-control" })
    </div>

    <button type="submit" class="btn btn-primary" id="submitButton">Search</button>
    @*    <button type="button" class="btn btn-primary" id="generatePdfButton" style="display:none;">Generate PDF</button>*@
}


<br />
<br />
<div class="user-info-container">
    @if (Model != null && Model.Employees.Count > 0)
    {
        <input type="text" id="searchInput" placeholder="Search by name...">
        <table class="user-info-table" id="employeeTable">
            <thead>
                <tr>
                    <th style="width: 100% ">Department</th>
                    <th>Section</th>
                    <th>Designation</th>
                    <th style="width:100%">Name</th>
                    <th>Employee Code</th>
                    <th>Status</th>
                    <th>View Marks</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var employee in Model.Employees)
                {
                    <tr>
                        <td>@employee.Department</td>
                        <td>@employee.Section</td>
                        <td>@employee.Designation</td>
                        <td>@employee.Name</td>
                        <td>@employee.EmployeeCode</td>
                        <td>@employee.EmpStatus</td>
                        <td><a target="_blank" href="../HR/AddMarksHR?regId=@HttpUtility.UrlEncode(STEP_PORTAL.Helpers.PasswordHelper.Encrypt(employee.RegId.ToString()))">Marks Entry</a></td>
                        @*<td><a href="javascript:void(0);" onclick="checkAuthAndRedirect(@Session["RegID"], @employee.RegId)">Marks Entry</a></td>*@
                    </tr>
                }
            </tbody>

        </table>
        <script>
            document.getElementById("generatePdfButton").style.display = "inline-block";
        </script>
    }
    else
    {
        <p>No employees found</p>
    }
</div>

<script src="~/Content/js/jquery-3.4.1.min.js"></script>
<script>

    $(document).ready(function () {
        var session_id = $('#selectedTaxPeriod').val();
        $('#taxPeriodDropdownMV').val(session_id);
        });


    function setRegId(regID) {
        document.getElementById("viewregIDField").value = regID;
        document.getElementById("viewMarksForm").submit();
    }

    // store session value

    var dropdown = document.getElementById("taxPeriodDropdownMV");
    var companyDropdown = document.querySelector("select[name='companyId']");
    var submitButton = document.getElementById("submitButton");

    dropdown.addEventListener("change", enableSubmitButton);
    companyDropdown.addEventListener("change", enableSubmitButton);

    function enableSubmitButton() {
        var selectedSession = dropdown.value;
        var selectedCompany = companyDropdown.value;

        if (selectedSession && selectedCompany) {
            submitButton.disabled = false;
        } else {
            submitButton.disabled = true;
        }
    }



    $('#DepartmentDropdown').change(function () {
        var selectedDepartment = $(this).val();
        var departments = @Html.Raw(Json.Encode(ViewBag.Departments));
        var selectedDepartmentData = departments.find(d => d.DepartmentName === selectedDepartment);

        $('#SectionDropdown').empty();
        //$('#SectionDropdown').append($('<option>').text('Select Section').val(''));

        if (selectedDepartmentData && selectedDepartmentData.Sections) {
            $.each(selectedDepartmentData.Sections, function (index, section) {
                $('#SectionDropdown').append($('<option>').text(section).val(section));
            });
        }
    });


        // generate pdf

    $(document).ready(function () {
        $('#generatePdfButton').on('click', function () {
            var form = $('#viewEmpListForm');
            form.attr('action', '@Url.Action("GeneratePdf", "ReportSuper")');
            form.submit();
        });
    });

    // search feature

        $("#searchInput").on("keyup", function () {
            var value = $(this).val().toLowerCase();
            console.log(value);
            $("#employeeTable tr:not(:first)").filter(function () {
                $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1)
            });
        });

</script>
